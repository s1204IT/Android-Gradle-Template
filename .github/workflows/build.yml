name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'stub/**'
      - 'gradle/**'
      - '*.gradle'
      - 'gradle.properties'
  workflow_dispatch:
    inputs:
      app_name:
        type: string
        description: Core App name
        required: false
        default: ""
      app_versionName:
        type: string
        description: Core Version name
        required: true
        default: "1.0"
      app_versionCode:
        type: string
        description: Core Version code
        required: true
        default: "1"
      stub_name:
        type: string
        description: Stub App name
        required: false
        default: ""
      stub_versionName:
        type: string
        description: Stub Version name
        required: true
        default: "1.0"
      stub_versionCode:
        type: string
        description: Stub Version code
        required: true
        default: "1"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/dists/
          key: ${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build with Gradle
        run: |
          if [[ -n "${{ secrets.STORE_FILE }}" && -n "${{ secrets.STORE_PASSWORD }}" && -n "${{ secrets.KEY_ALIAS }}" && -n "${{ secrets.KEY_PASSWORD }}" ]]; then
            echo "${{ secrets.STORE_FILE }}" | base64 -d > release.jks
            export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
            export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
            export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
          else
            export STORE_PASSWORD="android"
            export KEY_ALIAS="android"
            export KEY_PASSWORD="android"
          fi
          if [[ -n "${{ inputs.app_name }}" ]]; then
            sed -ie "/\<application/i \ \ \ \ \ \ \ \ android\:label\=\"${{ inputs.app_name }}\""
          fi
          ./gradlew assemble
          echo "appVersion=$(grep versionName app/build.gradle | awk '{print $2}' | tr -d \")" >> $GITHUB_ENV
          echo "stubVersion=$(grep versionName stub/build.gradle | awk '{print $2}' | tr -d \")" >> $GITHUB_ENV
          echo "commit=$(echo ${{ github.sha }} | cut -c -7)" >> $GITHUB_ENV

      - name: Upload Core APK
        uses: actions/upload-artifact@v3
        with:
          name: Core-APK(v${{ env.appVersion }}@${{ env.commit }})
          path: app/build/outputs/apk/**/app-*.apk

      - name: Upload Stub APK
        uses: actions/upload-artifact@v3
        with:
          name: Stub-APK(v${{ env.stubVersion }}@${{ env.commit }})
          path: stub/build/outputs/apk/release/stub-release.apk
