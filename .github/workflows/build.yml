name: Build

on:
  push:
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'gradle/**'
      - '*.gradle'
      - 'gradle.properties'
  workflow_dispatch:
    inputs:
      app_name:
        type: string
        description: App name
        required: false
        default: ""
      app_versionName:
        type: string
        description: Version name
        required: true
        default: "1.0"
      app_versionCode:
        type: string
        description: Version code
        required: true
        default: "1"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/
            ~/.gradle/wrapper/
          key: ${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build with Gradle
        run: |
          if [[ -n "${{ secrets.STORE_FILE }}" && -n "${{ secrets.STORE_PASSWORD }}" && -n "${{ secrets.KEY_ALIAS }}" && -n "${{ secrets.KEY_PASSWORD }}" ]]; then
            echo "${{ secrets.STORE_FILE }}" | base64 -d > app/release.jks
            export STORE_PASSWORD="${{ secrets.STORE_PASSWORD }}"
            export KEY_ALIAS="${{ secrets.KEY_ALIAS }}"
            export KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}"
          else
            export STORE_PASSWORD="android"
            export KEY_ALIAS="android"
            export KEY_PASSWORD="android"
          fi
          if [ "${{ inputs.app_name }}" != "" ]; then
            sed -ie "/\<application/i \ \ \ \ \ \ \ \ android\:label\=\"${{ inputs.app_name }}\"" app/src/main/AndroidManifest.xml
            echo "package=$(echo {{ inputs.app_name }})" >> $GITHUB_ENV
          else
            echo "package=$(grep applicationId app/build.gradle | awk '{print $2}' | tr -d \')" >> $GITHUB_ENV
          fi
          echo "version=$(grep versionName app/build.gradle | awk '{print $2}' | tr -d \')" >> $GITHUB_ENV
          ./gradlew assemble
          echo "commit=$(echo ${{ github.sha }} | cut -c-7)" >> $GITHUB_ENV

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.package}}_(v${{ env.version }}@${{ env.commit }})
          path: app/build/outputs/apk/**/app-*.apk
